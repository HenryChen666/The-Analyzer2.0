{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Henry\\\\Desktop\\\\SEG3125\\\\Lab\\\\StarAdmin-Free-React-Admin-Template\\\\template\\\\demo_1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Desktop\\\\SEG3125\\\\Lab\\\\StarAdmin-Free-React-Admin-Template\\\\template\\\\demo_1\\\\src\\\\app\\\\form-elements\\\\Toast\\\\withToastProvider.js\";\nimport React, { useState, useMemo } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport ToastContext from \"./context\";\nimport Toast from \"./Toast\"; // Create a random ID\n\nfunction generateUEID() {\n  let first = Math.random() * 46656 | 0;\n  let second = Math.random() * 46656 | 0;\n  first = (\"000\" + first.toString(36)).slice(-3);\n  second = (\"000\" + second.toString(36)).slice(-3);\n  return first + second;\n}\n\nfunction withToastProvider(Component) {\n  function WithToastProvider(props) {\n    const _useState = useState([]),\n          _useState2 = _slicedToArray(_useState, 2),\n          toasts = _useState2[0],\n          setToasts = _useState2[1];\n\n    const add = content => {\n      const id = generateUEID();\n      setToasts([...toasts, {\n        id,\n        content\n      }]);\n    };\n\n    const remove = id => setToasts(toasts.filter(t => t.id !== id));\n\n    const providerValue = useMemo(() => {\n      return {\n        add,\n        remove\n      };\n    }, [toasts]);\n    return React.createElement(ToastContext.Provider, {\n      value: providerValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), createPortal(React.createElement(\"div\", {\n      className: \"toasts-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, toasts.map(t => React.createElement(Toast, {\n      key: t.id,\n      remove: () => remove(t.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, t.content))), document.body));\n  }\n\n  return WithToastProvider;\n}\n\nexport default withToastProvider;","map":{"version":3,"sources":["C:\\Users\\Henry\\Desktop\\SEG3125\\Lab\\StarAdmin-Free-React-Admin-Template\\template\\demo_1\\src\\app\\form-elements\\Toast\\withToastProvider.js"],"names":["React","useState","useMemo","createPortal","ToastContext","Toast","generateUEID","first","Math","random","second","toString","slice","withToastProvider","Component","WithToastProvider","props","toasts","setToasts","add","content","id","remove","filter","t","providerValue","map","document","body"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,SAASC,YAAT,GAAwB;AACtB,MAAIC,KAAK,GAAIC,IAAI,CAACC,MAAL,KAAgB,KAAjB,GAA0B,CAAtC;AACA,MAAIC,MAAM,GAAIF,IAAI,CAACC,MAAL,KAAgB,KAAjB,GAA0B,CAAvC;AACAF,EAAAA,KAAK,GAAG,CAAC,QAAQA,KAAK,CAACI,QAAN,CAAe,EAAf,CAAT,EAA6BC,KAA7B,CAAmC,CAAC,CAApC,CAAR;AACAF,EAAAA,MAAM,GAAG,CAAC,QAAQA,MAAM,CAACC,QAAP,CAAgB,EAAhB,CAAT,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAAT;AAEA,SAAOL,KAAK,GAAGG,MAAf;AACD;;AAED,SAASG,iBAAT,CAA2BC,SAA3B,EAAsC;AACpC,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,sBACJf,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,UACzBgB,MADyB;AAAA,UACjBC,SADiB;;AAEhC,UAAMC,GAAG,GAAGC,OAAO,IAAI;AACrB,YAAMC,EAAE,GAAGf,YAAY,EAAvB;AAEAY,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY;AAAEI,QAAAA,EAAF;AAAMD,QAAAA;AAAN,OAAZ,CAAD,CAAT;AACD,KAJD;;AAKA,UAAME,MAAM,GAAGD,EAAE,IAAIH,SAAS,CAACD,MAAM,CAACM,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAA5B,CAAD,CAA9B;;AACA,UAAMI,aAAa,GAAGvB,OAAO,CAAC,MAAM;AAAE,aAAO;AAAEiB,QAAAA,GAAF;AAAOG,QAAAA;AAAP,OAAP;AAAwB,KAAjC,EAAmC,CAACL,MAAD,CAAnC,CAA7B;AAEA,WACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAGQ,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,oBAAeT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAGGb,YAAY,CACX;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,MAAM,CAACS,GAAP,CAAWF,CAAC,IACX,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,CAAC,CAACH,EAAd;AAAkB,MAAA,MAAM,EAAE,MAAMC,MAAM,CAACE,CAAC,CAACH,EAAH,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,CAAC,CAACJ,OADL,CADD,CADH,CADW,EAQXO,QAAQ,CAACC,IARE,CAHf,CADF;AAgBD;;AAED,SAAOb,iBAAP;AACD;;AAED,eAAeF,iBAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport ToastContext from \"./context\";\r\nimport Toast from \"./Toast\";\r\n\r\n// Create a random ID\r\nfunction generateUEID() {\r\n  let first = (Math.random() * 46656) | 0;\r\n  let second = (Math.random() * 46656) | 0;\r\n  first = (\"000\" + first.toString(36)).slice(-3);\r\n  second = (\"000\" + second.toString(36)).slice(-3);\r\n\r\n  return first + second;\r\n}\r\n\r\nfunction withToastProvider(Component) {\r\n  function WithToastProvider(props) {\r\n    const [toasts, setToasts] = useState([]);\r\n    const add = content => {\r\n      const id = generateUEID();\r\n\r\n      setToasts([...toasts, { id, content }]);\r\n    };\r\n    const remove = id => setToasts(toasts.filter(t => t.id !== id));\r\n    const providerValue = useMemo(() => { return { add, remove } }, [toasts]);\r\n\r\n    return (\r\n      <ToastContext.Provider value={ providerValue }>\r\n        <Component {...props} />\r\n\r\n        {createPortal(\r\n          <div className=\"toasts-wrapper\">\r\n            {toasts.map(t => (\r\n              <Toast key={t.id} remove={() => remove(t.id)}>\r\n                {t.content}\r\n              </Toast>\r\n            ))}\r\n          </div>,\r\n          document.body\r\n        )}\r\n      </ToastContext.Provider>\r\n    );\r\n  }\r\n\r\n  return WithToastProvider;\r\n}\r\n\r\nexport default withToastProvider;\r\n"]},"metadata":{},"sourceType":"module"}